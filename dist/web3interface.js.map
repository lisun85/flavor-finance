{"version":3,"sources":["../src/web3interface.js"],"names":["Web3","require","web3","process","env","INFURA_KEY","signingAccount","eth","accounts","privateKeyToAccount","fs","ExampleContractAddress","ExampleContract","ExampleContractABI","transactionCount","getExampleContract","contractAddress","Contract","from","address","gas","gasPrice","ExampleContractInstance","nextNonce","getTransactionCount"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,IAAI,GAAG,IAAIF,IAAJ,CAAS,kCAAkCG,OAAO,CAACC,GAAR,CAAYC,UAAvD,CAAb;;AACA,IAAMC,cAAc,GAAGJ,IAAI,CAACK,GAAL,CAASC,QAAT,CAAkBC,mBAAlB,CAAsC,OAAO,kEAA7C,CAAvB,C,CAAwI;;;;AAExI,IAAMC,EAAE,GAAGT,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMU,sBAAsB,GAAG,OAA/B;;AACA,IAAMC,eAAe,GAAG,IAAxB,C,CAA6B;;AAC7B,IAAMC,kBAAkB,GAAG,IAA3B,C,CAAgC;;AAEhC,IAAIC,gBAAgB,GAAG,CAAC,CAAxB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAASC,eAAT,EAA0B;AACpD,SAAO,IAAId,IAAI,CAACK,GAAL,CAASU,QAAb,CAAsBJ,kBAAtB,EAA0CG,eAA1C,EACP;AACCE,IAAAA,IAAI,EAAEZ,cAAc,CAACa,OADtB;AAECC,IAAAA,GAAG,EAAE,SAFN;AAGCC,IAAAA,QAAQ,EAAE;AAHX,GADO,CAAP;AAMA,CAPD;;;AASA,IAAMC,uBAAuB,GAAG,IAAhC,C,CACA;AACA;AACA;AACA;AACA;AACA;;;;SAEeC,S;;;;;iCAAf,aAA2B;AAC1B,QAAGT,gBAAgB,GAAG,CAAtB,EAAyB;AACxBA,MAAAA,gBAAgB,SAASZ,IAAI,CAACK,GAAL,CAASiB,mBAAT,CAA6BlB,cAAc,CAACa,OAA5C,EAAqD,SAArD,CAAzB;AACA;;AACD,WAAOL,gBAAgB,EAAvB;AACA,G","sourcesContent":["const Web3 = require('web3');\n\nconst web3 = new Web3('https://ropsten.infura.io/v3/' + process.env.INFURA_KEY);\nconst signingAccount = web3.eth.accounts.privateKeyToAccount('0x' + '8da4ef21b864d2cc526dbdb2a120bd2874c36c9d0a1fb7f8c63d7f7a8b41de8f');//process.env.ETH_PRIVATE_KEY);\n\nconst fs = require('fs');\n\nconst ExampleContractAddress = '0x...';\nconst ExampleContract = null;//JSON.parse(fs.readFileSync('./contracts/ExampleContract.json', 'utf8'));\nconst ExampleContractABI = null;//ExampleContract['abi'];\n\nvar transactionCount = -1;\n\nconst getExampleContract = function(contractAddress) {\n\treturn new web3.eth.Contract(ExampleContractABI, contractAddress,\n\t{\n\t\tfrom: signingAccount.address,\n\t\tgas: '1500000',\n\t\tgasPrice: 20000000000,\n\t});\n}\n\nconst ExampleContractInstance = null;\n// const ExampleContractInstance = new web3.eth.Contract(ExampleContractABI, ExampleContractAddress,\n// \t{\n// \t\tfrom: signingAccount.address,\n// \t\tgas: '1500000',\n// \t\tgasPrice: 20000000000,\n// \t});\n\nasync function nextNonce() {\n\tif(transactionCount < 0) {\n\t\ttransactionCount = await web3.eth.getTransactionCount(signingAccount.address, \"pending\");\n\t}\n\treturn transactionCount++;\n}\n\nexport {\n    web3, signingAccount, getExampleContract, ExampleContractAddress, ExampleContractInstance, nextNonce\n};\n"],"file":"web3interface.js"}