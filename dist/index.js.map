{"version":3,"sources":["../src/index.js"],"names":["require","config","express","bodyParser","account","asset","coinmarketcap","path","app","use","req","res","next","header","json","static","join","__dirname","get","address","query","getAccount","then","catch","post","body","selectedAsset","updateAccount","endPrizePeriod","startPrizePeriod","results","updateAssetPrices","getAssetPrices","status","end","sendFile","port","process","env","PORT","listen","console","log"],"mappings":"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","sourcesContent":["require('dotenv').config();\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst account = require('./account');\nconst asset = require('./asset');\nconst coinmarketcap = require('./lib/coinmarketcap');\nconst path = require(\"path\");\nconst app = express();\n\napp.use((req, res, next) => {\n    res.header('Access-Control-Allow-Origin', \"*\");\n    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n    res.header('Access-Control-Allow-Headers', 'Content-Type');\n    next();\n});\n\napp.use( bodyParser.json() );  // to support JSON-encoded bodies\n\napp.use('/static', express.static(path.join(__dirname, \"../client/build/static\")));\n\napp.get('/api/account', (req, res, next) => {\n  const address = req.query.address;\n  account.getAccount(address)\n    .then((account) => {\n      res.json({ account });\n    })\n    .catch(next);\n\n});\n\napp.post('/api/account', (req, res, next) => {\n  let address = req.body.address;\n  let selectedAsset = req.body.selectedAsset;\n  account.updateAccount(address, selectedAsset)\n    .then((account) => {\n      res.json({ account });\n    })\n    .catch(next);\n});\n\napp.get('/api/test', (req, res, next) => {\n    res.json({ 'message': 'hello world' });\n});\n\napp.get('/api/cyclePrizePeriod', (req, res, next) => {\n    asset.endPrizePeriod();\n    asset.startPrizePeriod().then(results => {\n      res.json({ results });\n    })\n    .catch(next);\n});\n\napp.get('/api/updateAssetPrices', (req, res, next) => {\n    asset.updateAssetPrices().then(results => {\n      res.json({ results });\n    })\n    .catch(next);\n});\n\napp.get('/api/assetPrices', (req, res, next) => {\n    asset.getAssetPrices().then(results => {\n      res.status(200).json({ results }).end();\n    })\n    .catch(next);\n});\n\napp.get(\"/about\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"../client/build/index.html\"));\n});\n\napp.get(\"/about/*\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"../client/build/index.html\"));\n});\n\napp.get(\"/\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"../client/build/index.html\"));\n});\n\napp.get(\"/home\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"../client/build/index.html\"));\n});\n\n\n\nconst port = process.env.PORT || 8080;\napp.listen(port, () => {\n    console.log(`Node server listening on port ${port}`);\n});\n"],"file":"index.js"}