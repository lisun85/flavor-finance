{"version":3,"sources":["../../src/lib/web3interface.js"],"names":["Web3","require","fs","transactionCount","getPrizeStrategyContract","web3","_web3","signingAccount","eth","accounts","privateKeyToAccount","process","env","ETH_PRIVATE_KEY","PrizeStrategyContractAddress","PrizeStrategyContract","JSON","parse","readFileSync","PrizeStrategyContractABI","Contract","from","address","gas","gasPrice","infuraSubdomain","NODE_ENV","INFURA_KEY","nextNonce","getTransactionCount"],"mappings":";;;;;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAIE,gBAAgB,GAAG,CAAC,CAAxB;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAW;AAC3C,MAAMC,IAAI,GAAGC,KAAK,EAAlB;;AACA,MAAMC,cAAc,GAAGF,IAAI,CAACG,GAAL,CAASC,QAAT,CAAkBC,mBAAlB,CAAsC,OAAOC,OAAO,CAACC,GAAR,CAAYC,eAAzD,CAAvB;AACA,MAAMC,4BAA4B,GAAG,4CAArC;AACA,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,KAAL,CAAWf,EAAE,CAACgB,YAAH,CAAgB,sCAAhB,EAAwD,MAAxD,CAAX,CAA9B;AACA,MAAMC,wBAAwB,GAAGJ,qBAAqB,CAAC,KAAD,CAAtD;AACA,SAAO,IAAIV,IAAI,CAACG,GAAL,CAASY,QAAb,CAAsBD,wBAAtB,EAAgDL,4BAAhD,EACP;AACCO,IAAAA,IAAI,EAAEd,cAAc,CAACe,OADtB;AAECC,IAAAA,GAAG,EAAE,SAFN;AAGCC,IAAAA,QAAQ,EAAE;AAHX,GADO,CAAP;AAMA,CAZD;;;;AAcA,IAAMlB,KAAK,GAAG,MAAM;AACnB,MAAMmB,eAAe,GAAGd,OAAO,CAACC,GAAR,CAAYc,QAAZ,KAAyB,YAAzB,GACrB,SADqB,GAErB,SAFH;AAGA,SAAO,IAAI1B,IAAJ,mBAAoByB,eAApB,2BAAoDd,OAAO,CAACC,GAAR,CAAYe,UAAhE,EAAP;AACA,CALD;;SAQeC,S;;;;;iCAAf,aAA2B;AAC1B,QAAGzB,gBAAgB,GAAG,CAAtB,EAAyB;AACxBA,MAAAA,gBAAgB,SAASE,IAAI,CAACG,GAAL,CAASqB,mBAAT,CAA6BtB,cAAc,CAACe,OAA5C,EAAqD,SAArD,CAAzB;AACA;;AACD,WAAOnB,gBAAgB,EAAvB;AACA,G","sourcesContent":["const Web3 = require('web3');\nconst fs = require('fs');\n\nvar transactionCount = -1;\n\nconst getPrizeStrategyContract = function() {\n\tconst web3 = _web3();\n\tconst signingAccount = web3.eth.accounts.privateKeyToAccount('0x' + process.env.ETH_PRIVATE_KEY);\n\tconst PrizeStrategyContractAddress = '0x6F5587E191C8b222F634C78111F97c4851663ba4';\n\tconst PrizeStrategyContract = JSON.parse(fs.readFileSync('./contracts/FlavorPrizeStrategy.json', 'utf8'));\n\tconst PrizeStrategyContractABI = PrizeStrategyContract['abi'];\n\treturn new web3.eth.Contract(PrizeStrategyContractABI, PrizeStrategyContractAddress,\n\t{\n\t\tfrom: signingAccount.address,\n\t\tgas: '1500000',\n\t\tgasPrice: 20000000000,\n\t});\n}\n\nconst _web3 = () => {\n\tconst infuraSubdomain = process.env.NODE_ENV === 'production'\n\t\t? 'mainnet'\n\t\t: 'ropsten'\n\treturn new Web3(`https://${infuraSubdomain}.infura.io/v3/${process.env.INFURA_KEY}`);\n}\n\n\nasync function nextNonce() {\n\tif(transactionCount < 0) {\n\t\ttransactionCount = await web3.eth.getTransactionCount(signingAccount.address, \"pending\");\n\t}\n\treturn transactionCount++;\n}\n\nexport {\n    getPrizeStrategyContract\n};\n"],"file":"web3interface.js"}