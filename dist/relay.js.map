{"version":3,"sources":["../src/relay.js"],"names":["Datastore","require","web3interface","web3","ProxyWalletABI","signingAccount","datastore","projectId","keyFilename","relayMessageSave","username","signature","contractAddress","action","params","txHash","userKey","key","get","then","results","entity","txs","push","upsert","console","log","resolve","relaySendTransactionMessage","txParams","WalletContract","getWalletContract","tx","gas","utils","toHex","to","gasPrice","toBN","data","methods","sendTransaction","nonce","gasLimit","value","encodeABI","signedTx","signTransaction","rawTransaction","receipt","Promise","reject","eth","sendSignedTransaction","once","on"],"mappings":"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","sourcesContent":["const Datastore = require('@google-cloud/datastore');\nconst web3interface = require('./web3interface');\nconst web3 = web3interface.web3;\nconst ProxyWalletABI = web3interface.ProxyWalletABI;\nconst signingAccount = web3interface.signingAccount;\n\n// Creates a client\nconst datastore = new Datastore({\n  projectId: 'poolside-network',\n  keyFilename: 'service_account.json'\n  // service_account.json is not included in git repository\n});\n\nasync function relayMessageSave(username, signature, contractAddress, action, params, txHash) {\n  const userKey = datastore.key(['User', username]);\n  await datastore.get(userKey).then(results => {\n      const entity = results[0];\n      entity.txs = entity.txs || [];\n\t  entity.txs.push({\n\t\t  \"action\": action,\n\t\t  \"params\": params,\n\t\t  \"signature\": signature,\n\t\t  \"txHash\": txHash\n\t  });\n      datastore.upsert(entity).then(() => {\n        // Entity updated successfully.\n        console.log('successfully saved transaction record for ' + username);\n        resolve(entity);\n      });\n    });\n};\n\nasync function relaySendTransactionMessage(username, signature, contractAddress, action, txParams){\n\tvar WalletContract = web3interface.getWalletContract(contractAddress);\n\t\n\tvar tx = {\n\t\tgas:  web3.utils.toHex(3000000),\n\t\tto: contractAddress,\n\t\tgasPrice: web3.utils.toHex(web3.utils.toBN(txParams.gasPrice)),\n\t\tdata: WalletContract.methods.sendTransaction(\n\t\t\ttxParams.nonce, txParams.gasPrice, txParams.gasLimit, txParams.to, \n\t\t\ttxParams.value, txParams.data, signature).encodeABI()\n\t};\n\t\n\tvar signedTx = await signingAccount.signTransaction(tx);\n\t\n\tconsole.log(\"Sending Raw Transaction: \" + signedTx.rawTransaction);\n\t\n\tvar receipt = await new Promise(function(resolve, reject) {\n\t\tweb3.eth.sendSignedTransaction(signedTx.rawTransaction)\n\t\t\t.once('receipt', function(receipt){\n\t\t\t\tresolve(receipt);\n\t\t\t})\n\t\t\t.on('transactionHash', console.log)\n\t\t\t.on('error', reject);\n\t});\n\t\n    return {\"receipt\" : receipt};\n}\n\nexport {\n    relaySendTransactionMessage\n};\n"],"file":"relay.js"}